# =====================================================
# üåå Quantum Core Auto Reload Engine v1.2
# =====================================================
# T·ª± ƒë·ªông n·∫°p l·∫°i t·∫•t c·∫£ module trong th∆∞ m·ª•c "core/"
# m√† KH√îNG c·∫ßn Deploy l·∫°i Render ho·∫∑c Restart th·ªß c√¥ng.
# =====================================================

import os, sys, importlib, time, threading

CORE_PATH = os.path.join(os.path.dirname(__file__), "core")
MODULES = {}

def load_all_modules():
    """N·∫°p t·∫•t c·∫£ module Python trong th∆∞ m·ª•c core/"""
    for file in os.listdir(CORE_PATH):
        if file.endswith(".py") and file != "__init__.py":
            name = f"core.{file[:-3]}"
            if name not in sys.modules:
                MODULES[name] = importlib.import_module(name)
                print(f"[CORE_RELOAD] üîπ ƒê√£ n·∫°p module: {name}")

def reload_modified_modules():
    """T·ª± ƒë·ªông reload n·∫øu file trong core/ thay ƒë·ªïi"""
    mtimes = {}
    while True:
        try:
            for file in os.listdir(CORE_PATH):
                if not file.endswith(".py"): 
                    continue
                path = os.path.join(CORE_PATH, file)
                new_mtime = os.path.getmtime(path)
                old_mtime = mtimes.get(path)

                if old_mtime is None:
                    mtimes[path] = new_mtime
                elif new_mtime != old_mtime:
                    mtimes[path] = new_mtime
                    name = f"core.{file[:-3]}"
                    if name in MODULES:
                        importlib.reload(MODULES[name])
                        print(f"[CORE_RELOAD] üîÅ ƒê√£ reload module: {name}")
        except Exception as e:
            print("[CORE_RELOAD] ‚ö† L·ªói reload:", e)
        time.sleep(10)

def start_auto_reload():
    """Kh·ªüi ch·∫°y lu·ªìng gi√°m s√°t core/"""
    load_all_modules()
    threading.Thread(target=reload_modified_modules, daemon=True).start()
    print("[CORE_RELOAD] üåÄ ƒê√£ b·∫≠t ch·∫ø ƒë·ªô theo d√µi v√† t·ª± n·∫°p core/")
